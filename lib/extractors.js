// Generated by CoffeeScript 1.7.1
var extractors;

extractors = {
  title: {
    name: "title",
    extract: function($, res, next) {
      var title;
      title = $('head > title').text();
      return next(null, title);
    }
  },
  description: {
    name: "description",
    extract: function($, res, next) {
      var description;
      description = $('meta[name="description"]').attr('content');
      return next(null, description);
    }
  },
  image: {
    name: "image",
    parseInlineCss: function(css) {
      var declaration, declarations, key, parsed, value, _i, _len, _ref;
      parsed = {};
      try {
        declarations = css.split(';');
        for (_i = 0, _len = declarations.length; _i < _len; _i++) {
          declaration = declarations[_i];
          _ref = declaration.split(':'), key = _ref[0], value = _ref[1];
          key = key.replace(/\s/g, '');
          value = value.replace(/\s/g, '');
          parsed[key] = value;
        }
      } catch (_error) {}
      return parsed;
    },
    extract: function($, res, next) {
      var height, image, images, img, ratio, styles, width, _i, _len;
      images = $('img');
      for (_i = 0, _len = images.length; _i < _len; _i++) {
        img = images[_i];
        width = img.attribs.width;
        height = img.attribs.height;
        styles = this.parseInlineCss(img.attribs.style);
        if (!width && styles.width && /px/.test(styles.width)) {
          width = styles.width.split('px')[0];
        }
        if (!height && styles.height && /px/.test(styles.height)) {
          height = styles.height.split('px')[0];
        }
        width = parseInt(height, 10);
        height = parseInt(height, 10);
        ratio = width / height;
        if (width > 200 && height > 200 && ratio < 2 && ratio > 0.5 && img.attribs.src) {
          image = img.attribs.src;
          break;
        }
      }
      return next(null, image);
    }
  },
  explicitImage: {
    name: 'explicitImage',
    extract: function($, res, next) {
      var _ref;
      if ((_ref = res.headers['content-type']) === 'image/png' || _ref === 'image/jpg' || _ref === 'image/jpeg') {
        return next(null, res.request.href);
      } else {
        return next(null);
      }
    }
  }
};

module.exports = extractors;
